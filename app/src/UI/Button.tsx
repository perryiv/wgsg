///////////////////////////////////////////////////////////////////////////////
//
//	Copyright (c) 2025, Perry L Miller IV
//	All rights reserved.
//	MIT License: https://opensource.org/licenses/mit-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//	Button component.
//
///////////////////////////////////////////////////////////////////////////////

import { MouseEvent, useCallback } from "react";


///////////////////////////////////////////////////////////////////////////////
//
//	Types used below.
//
///////////////////////////////////////////////////////////////////////////////

type ButtonClickEvent = MouseEvent<HTMLAnchorElement>;

export interface IButtonProps
{
	label: string;
	onClick?: ( event: ButtonClickEvent ) => void;
}


///////////////////////////////////////////////////////////////////////////////
//
//	Button component.
//
///////////////////////////////////////////////////////////////////////////////

export function Button ( props: IButtonProps )
{
	// Get input.
	const { label, onClick } = props;

	//
	// Handle the click.
	//
	const handleClick = useCallback ( ( event: ButtonClickEvent ) =>
	{
		if ( onClick )
		{
			onClick ( event );
		}
	},
	[ onClick ] );

	//
	// Render the components.
	//
	return (
		<div>
			<a onClick = { handleClick } > { label } </a>
		</div>
	);
}
